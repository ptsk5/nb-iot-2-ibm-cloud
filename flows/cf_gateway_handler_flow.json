[{"id":"87400a27.ba0888","type":"ibmiot in","z":"37405bfe.302354","authentication":"boundService","apiKey":"","inputType":"evt","logicalInterface":"","ruleId":"","deviceId":"proxyDevice","applicationId":"","deviceType":"ProxyDeviceType","eventType":"+","commandType":"","format":"json","name":"IBM IoT","service":"registered","allDevices":"","allApplications":"","allDeviceTypes":"","allLogicalInterfaces":"","allEvents":true,"allCommands":"","allFormats":"","qos":0,"x":200,"y":240,"wires":[["17871c4d.cb8a04","ef1d2943.08e468"]]},{"id":"17871c4d.cb8a04","type":"debug","z":"37405bfe.302354","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":430,"y":180,"wires":[]},{"id":"65b488bf.3c6f98","type":"wiotp out","z":"37405bfe.302354","authType":"g","qs":"false","qsDeviceId":"","deviceKey":"1233700b.2edb6","deviceType":"NBIoTDeviceType","deviceId":"","event":"event","format":"json","qos":"2","name":"","x":670,"y":240,"wires":[]},{"id":"ef1d2943.08e468","type":"function","z":"37405bfe.302354","name":"convert data","func":"\nvar udpData = msg.payload.d.udpData;\nvar data = udpData.split(\":\");\nmsg.deviceType = \"NBIoTDeviceType\";\nmsg.deviceId = data[0];\n\n//do whatever you like based on contentType in data[1]\nmsg.len = data.length;\nmsg.payload = {\n    ip : msg.payload.d.ip,\n    port : msg.payload.d.port,\n    ts_utc : msg.payload.d.ts_utc,\n    contentType : data[1],\n    data1 : data[2] * 1,\n    data2 : data[3] * 1 \n};\nif (data.length <= 4) return msg; //do not parse further in case of running only app.js \n\n// * 1 - fastest way how to convert a string to a number\nif (data[4] != '-') msg.payload.CSQ = data[4].replace(',','.') * 1;  \nif (data[5] != '-') msg.payload.signal_power = data[5] * 1 / 10; \nif (data[6] != '-') msg.payload.total_power = data[6] * 1 / 10; \nif (data[7] != '-') msg.payload.tx_power = data[7] * 1 / 10; \nif (data[8] != '-') msg.payload.tx_time = data[8] * 1; //msec \nif (data[9] != '-') msg.payload.rx_time = data[9] * 1; //msec\nif (data[10] != '-') msg.payload.cell_id = data[10] * 1; \nif (data[11] != '-') msg.payload.ECL = data[11] * 1; \nif (data[12] != '-') msg.payload.SNR = data[12] * 1; \nif (data[13] != '-') msg.payload.EARFCN = data[13] * 1; \nif (data[14] != '-') msg.payload.PCI = data[14] * 1; \nif (data[15] != '-') msg.payload.RSRQ = data[15] * 1; \n\n\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":240,"wires":[["65b488bf.3c6f98","d35d3cb9.767d"]]},{"id":"d35d3cb9.767d","type":"cloudant out","z":"37405bfe.302354","name":"","cloudant":"","database":"nbiot-data","service":"xxxxxx-cloudantNoSQLDB","payonly":false,"operation":"insert","x":690,"y":320,"wires":[]},{"id":"9480f0f4.3e1ac","type":"comment","z":"37405bfe.302354","name":"WIoTP allows to store all data into cloudant, but I prefer to store them manually by myself","info":"","x":930,"y":380,"wires":[]},{"id":"1233700b.2edb6","type":"wiotp-credentials","z":"","name":"","org":"xxxxxx","serverName":"xxxxxx.messaging.internetofthings.ibmcloud.com","devType":"GatewayDeviceType","devId":"gatewayDevice","keepalive":"60","cleansession":true,"tls":"","usetls":false}]